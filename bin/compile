#!/bin/bash
# Usage: bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

# START CONFIG
if [ -n "$BUILDPACK_URL" ]; then 
	ENVIRONMENT="Heroku"
else
	ENVIRONMENT="Vagrant"
fi

echo "-----> Environment: ${ENVIRONMENT}"

if [ -z "$S3_BUILDS_BUCKET" ]; then
  S3_BUILDS_BUCKET=ponticlaro-heroku
fi

if [ -z "$NGINX_VERSION" ]; then
  NGINX_VERSION=1.4.2
fi

if [ -z "$PHP_VERSION" ]; then
  PHP_VERSION=5.5.3
fi

if [ -z "$COMPOSER_PATH" ]; then
  COMPOSER_PATH=/app/public
fi

# END CONFIG

NGINX_URL="https://s3.amazonaws.com/${S3_BUILDS_BUCKET}/builds/nginx-${NGINX_VERSION}-heroku.tar.gz"
PHP_URL="https://s3.amazonaws.com/${S3_BUILDS_BUCKET}/builds/php-${PHP_VERSION}-with-fpm-heroku.tar.gz"

function indent() {
	c='s/^/       /'
	case $(uname) in
		Darwin) sed -l "$c";;
		*)      sed -u "$c";;
	esac
}

BUILD_DIR=$1
CACHE_DIR=$2
mkdir -p $BUILD_DIR $CACHE_DIR
mkdir -p $BUILD_DIR/bin

echo "-----> BUILD_DIR=${BUILD_DIR}"
echo "-----> CACHE_DIR=${CACHE_DIR}"

# Nginx
cd ${BUILD_DIR}
if [ ! -d ./vendor/nginx ]; then
	echo "-----> Installing Nginx v${NGINX_VERSION}"
	mkdir -p ./vendor/nginx && cd ./vendor/nginx
	curl --silent --location $NGINX_URL | tar xz
fi

# PHP
cd ${BUILD_DIR}
if [ ! -d ./vendor/php ]; then
	echo "-----> Installing PHP v${PHP_VERSION}"
	mkdir -p ./vendor/php && cd ./vendor/php
	curl --silent --location $PHP_URL | tar xz
fi

# setup web script. php-cgi relies on PHP_FCGI_CHILDREN=5 PHP_FCGI_MAX_REQUESTS=1000, set in 'bin/release'
echo "-----> Installing boot script"
cd ${BUILD_DIR}

# Remove existing scripts on development VM
if [[ $ENVIRONMENT = 'Vagrant' ]]; then

	if [ -f /app/bin/setup.sh ]; then
		rm -rf /app/bin/setup.sh
	fi

	if [ -f /app/bin/boot.sh ]; then
		rm -rf /app/bin/boot.sh
	fi

fi

echo $BUILD_DIR/app/

mv $BUILD_DIR/app/* /app

cat >bin/setup.sh <<EOF
#!/usr/bin/env bash

echo "-----> Setting up app"

cp $BUILD_DIR/vendor/php/php/fpm/status.html $BUILD_DIR/public/status.html

cp $BUILD_DIR/server/php-fpm/php-fpm.conf $BUILD_DIR/vendor/php/etc/php-fpm.conf
cp $BUILD_DIR/server/php/php.ini $BUILD_DIR/vendor/php/php.ini
erb $BUILD_DIR/server/nginx/nginx.conf.erb > $BUILD_DIR/vendor/nginx/conf/nginx.conf
erb $BUILD_DIR/server/nginx/project.conf.erb > $BUILD_DIR/vendor/nginx/conf/project.conf

# Expose Heroku config vars to PHP-FPM processes
for var in \`env | cut -f1 -d=\`; do
  echo "env[\$var] = \\$\${var}" >> $BUILD_DIR/vendor/php/etc/php-fpm.conf
done

touch $BUILD_DIR/vendor/nginx/logs/access.log $BUILD_DIR/vendor/nginx/logs/error.log
(tail -f -n 0 $BUILD_DIR/vendor/nginx/logs/*.log &)
EOF

chmod +x bin/setup.sh

cat >bin/boot.sh <<EOF
#!/usr/bin/env bash

/app/bin/setup.sh

if [ $ENVIRONMENT = 'Vagrant'  ]; then #kill any php-fpm instance
	echo "-----> Killing PHP FPM instances"
	killall -9 php-fpm
fi
echo "-----> Booting PHP FPM"
/app/vendor/php/sbin/php-fpm -y /app/vendor/php/etc/php-fpm.conf -c /app/vendor/php/php.ini

if [ $ENVIRONMENT = 'Vagrant'  ]; then #stop nginx
	echo "-----> Stopping nginx"
	/app/vendor/nginx/sbin/nginx -s stop
fi
echo "-----> Booting nginx"
/app/vendor/nginx/sbin/nginx -c /app/vendor/nginx/conf/nginx.conf
EOF

chmod +x bin/boot.sh

echo "-----> Done with compile"

# clean the cache
rm -rf $CACHE_DIR